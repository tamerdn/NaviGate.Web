@model NaviGate.Web.Models.Document

@{
    ViewData["Title"] = "Döküman Sil";
    var userRoles = ViewData["UserRoles"] as Dictionary<string, string>;
}

<h1>@ViewData["Title"]</h1>

<h3 class="text-danger">Bu dökümanı kalıcı olarak silmek istediğinizden emin misiniz?</h3>
<p class="text-danger">Bu işlem geri alınamaz.</p>

<div>
    <h5>Mevcut Döküman</h5>
    <p>
        <strong>Dosya Adı:</strong> @Model.FileName
    </p>
    <hr />

    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DocumentType)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DocumentType)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FileName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FileName)
        </dd>

        <dt class="col-sm-2">
            Yükleme Tarihi
        </dt>
        <dd class="col-sm-10">
            @Model.UploadDateUtc.ToLocalTime().ToString("dd.MM.yyyy HH:mm")
        </dd>

        @if (Model.ModifiedAtUtc.HasValue)
        {
            <dt class="col-sm-2">
                Son Güncelleme
            </dt>
            <dd class="col-sm-10">
                @Model.ModifiedAtUtc.Value.ToLocalTime().ToString("dd.MM.yyyy HH:mm")
            </dd>
        }

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.UploadedByUser)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.UploadedByUser.FirstName) @Html.DisplayFor(model => model.UploadedByUser.LastName)
            @if (userRoles != null && userRoles.ContainsKey(Model.UploadedByUserId))
            {
                <span class="badge bg-secondary fw-normal">@userRoles[Model.UploadedByUserId]</span>
            }
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Shipment)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Shipment.ReferenceNumber)
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FileSizeInBytes)
        </dt>
        <dd class="col-sm-10">
            @if (Model.FileSizeInBytes.HasValue)
            {
                <span>@((Model.FileSizeInBytes.Value / 1024f).ToString("0.00")) KB</span>
            }
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.VerificationStatus)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.VerificationStatus)
        </dd>

        @if (!string.IsNullOrEmpty(Model.VerificationNotes))
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.VerificationNotes)
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.VerificationNotes)
            </dd>
        }
    </dl>

    <div class="mt-4">
        <form asp-action="Delete" method="post">
            <input type="hidden" asp-for="DocumentId" />
            <button type="submit" class="btn btn-danger me-2">Evet, Sil</button>
            <a asp-action="Index" class="btn btn-secondary">Listeye Dön</a>
        </form>
    </div>
</div>

